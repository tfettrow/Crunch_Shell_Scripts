#!/bin/bash
#SBATCH --job-name=batch_fmri1					# Job name
#SBATCH --mail-type=END,FAIL          			# Mail events (NONE, BEGIN, END, FAIL, ALL)
#SBATCH --mail-user=<valay.shah@ufl.edu>  		# Where to send mail	
#SBATCH --cpus-per-task=2
#SBATCH --ntasks=1                    			# Run a single task
#SBATCH --mem=16000mb	                   	    # Memory limit
#SBATCH --qos=rachaelseidler
#SBATCH --time=96:00:00               			# Time limit hrs:min:sec
#SBATCH --output=batch_fmri1.%A_%a.out 	# Standard output and error log
#SBATCH --array=0				# array range
pwd; hostname; date

##### BATCH FILE INFO ######
# 1) specify the anticipated memory for the job (>25% more than what it will actually use)
# 2) specify the array (0-N) vector.. must be size of the subject_array.. starts with 0
# 3) specify the subject_array
# 4) make sure the directories are set to your repositories
# 5) uncomment the step you would like to process for each subject specified in subject_array


subject_array=(1002) # 1004 1007 1009 1010 1011 1013 1017 1018 1019 1020 1022 1024 1025 1026 1027 1029 1030 1031 1032 1033 1034 2002 2007 2008 2013 2015 2017 2018 2020 2021 2022 2023 2025 2026 2027 2033 2034 2037 2038 2039 2042 2052 2059 2082 2090 2095 2111 2117 3024 3029 3039 3042 3046 3053 3072 3073 3092 3107 3120)
# subject_array=(2002 2007 2008 2013 2015 2017 2018 2020 2021 2022 2023 2025 2026 2027 2033 2034 2037 2038 2039 2042 2052 2059 2082 2090 2095 2117 3024 3029 3039 3042 3046 3053 3072 3073 3092 3107 3120)
# subject_array=(1002 1004 1007 1009 1010 1011 1013 1017 1018 1019 1020 1022 1024 1025 1026 1027 1029 1030 2002 2007 2008 2012 2013 2015 2017 2018 2020 2021 2022 2023 2025 2026 2027 2033 2034 2037 2038 2039 2042 2052 2059 2062 2082 3024 3029 3039 3042 3046 3047 3053 3063 3072 3073 3077 3092)

# subject_array=(1002)
# subject=${subject_array[0]}

subject=${subject_array[$SLURM_ARRAY_TASK_ID]}
Subject_dir=/blue/rachaelseidler/share/FromExternal/Research_Projects_UF/CRUNCH/MiM_Data/${subject}

# ######TYLER F Directory
# cd /blue/rachaelseidler/tfettrow/Crunch_Code
# Shell_dir=/blue/rachaelseidler/tfettrow/Crunch_Code/Shell_Scripts
# Matlab_dir=/blue/rachaelseidler/tfettrow/Crunch_Code/Matlab_Scripts
# Template_dir=/blue/rachaelseidler/tfettrow/Crunch_Code/MR_Templates

######VALAY S Directory
cd /blue/rachaelseidler/valay.shah
Shell_dir=/blue/rachaelseidler/valay.shah/Shell_Scripts
Matlab_dir=/blue/rachaelseidler/valay.shah/MiM_Matlab/MiM_Matlab
Template_dir=/blue/rachaelseidler/valay.shah/MR_Templates

cd $Shell_dir

# ./fmri_processing/preprocess_fmri.sh $Matlab_dir $Template_dir $Subject_dir slicetime_fmri create_fieldmap unwarp_fmri art_fmri 
./fmri_processing/preprocess_fmri.sh $Matlab_dir $Template_dir $Subject_dir copy_skullstripped_biascorrected_t1_4_ants n4_bias_correction ants_norm_fmri
# # ./fmri_processing/preprocess_fmri.sh $Matlab_dir $Template_dir $Subject_dir check_fmri_ants
# ./fmri_processing/preprocess_fmri.sh $Matlab_dir $Template_dir $Subject_dir level_one_stats_ants_vs
# # ./fmri_processing/preprocess_fmri.sh $Matlab_dir $Template_dir $Subject_dir zip_mid_files
# ./fmri_processing/process_level_two_fmri.sh


# slicetime_fmri
# create_fieldmap
# unwarp_fmri
# art_fmri
# remove_outlier_volumes
# copy_skullstripped_biascorrected_t1_4_ants
# n4_bias_correction
# ants_norm_fmri
# smooth_fmri_ants
# check_fmri_ants
# level_one_stats_ants
# copy_fmri_for_conn
# art_fmri_conn
# no_outliers_copy_wholebrain


# vv SPM NORM STEPS vv
# coregister_t1_to_MeanFM
# segment_t1
# spm_norm_fmri
# smooth_fmri
# spm_norm_t1 
# level_one_stats_spm
# ^^^^^^^^^^^^^^^^^^^^^

############################### redcap sphere creation #################################################
# ./convert_rois_to_spheres ROI_settings_MiMRedcap.txt
# ./combine_conn_node_networks $Matlab_dir conn_wu120_all_wb 'left_dlpfc,right_dlpfc,left_acc,right_acc,medial_prefrontal_cortex,post_cingulate,left_aud_cortex,left_post_ips,right_post_ips,left_insular,right_insular,visual_cortex,left_ips,right_ips,right_thalamus,left_hand,right_hand,left_mouth,right_mouth,left_rsc,right_rsc,dACC'

################################ redcap beta estimate extraction #######################################
###REdCap ROIs, DLPFC and ACC
# ./fmri_processing/export_fmri_rois_to_redcap.sh '1002,1004,1007,1009,1010,1011,1013,1017,1018,1019,1020,1022,1024,1025,1026,1027,1029,1030,1032,2002,2007,2008,2012,2013,2015,2017,2018,2020,2021,2022,2023,2025,2026,2027,2033,2034,2037,2038,2039,2042,2052,2059,2082,2090,2095,3024,3029,3039,3042,3046,3047,3053,3063,3072,3073,3092' 05_MotorImagery ROI_settings_MiMRedcap_wfuMasked.txt fmri_roi_betas.csv
# ./fmri_processing/export_fm ri_rois_to_redcap.sh '1002,1004,1007,1009,1010,1011,1013,1017,1018,1019,1020,1022,1024,1025,1026,1027,1029,1030,1032,2002,2007,2008,2012,2013,2015,2017,2018,2020,2021,2022,2023,2025,2026,2027,2033,2034,2037,2038,2039,2042,2052,2059,2082,2090,2095,3024,3029,3039,3042,3046,3047,3053,3063,3072,3073,3092' 06_Nback ROI_settings_MiMRedcap_wfuMasked.txt fmri_roi_betas.csv
# ./fmri_processing/combine_subject_mri_roi.sh '1002,1004,1007,1009,1010,1011,1013,1017,1018,1019,1020,1022,1024,1025,1026,1027,1029,1030,1032,2002,2007,2008,2012,2013,2015,2017,2018,2020,2021,2022,2023,2025,2026,2027,2033,2034,2037,2038,2039,2042,2052,2059,2082,2090,2095,3024,3029,3039,3042,3046,3047,3053,3063,3072,3073,3092' 05_MotorImagery fmri_roi_betas.csv fmri_redcap.csv
# ./fmri_processing/combine_subject_mri_roi.sh '1002,1004,1007,1009,1010,1011,1013,1017,1018,1019,1020,1022,1024,1025,1026,1027,1029,1030,1032,2002,2007,2008,2012,2013,2015,2017,2018,2020,2021,2022,2023,2025,2026,2027,2033,2034,2037,2038,2039,2042,2052,2059,2082,2090,2095,3024,3029,3039,3042,3046,3047,3053,3063,3072,3073,3092' 06_Nback fmri_roi_betas.csv fmri_redcap.csv

###Sensorimotor ROIs for motor iamgery
# ./fmri_processing/export_fmri_rois_to_redcap.sh '1002,1004,3092,3107,3120' 05_MotorImagery ROI_settings_fMRI.txt SenMot_BetaNEW.csv
# ./fmri_processing/combine_subject_mri_roi.sh '1002,1004,3092,3107,3120' 05_MotorImagery SenMot_Beta.csv fmri_SenMotNEW.csv

# ./fmri_processing/export_fmri_rois_to_redcap.sh '1002,1004,1007,1009,1010,1011,1013,1017,1018,1019,1020,1022,1024,1025,1026,1027,1029,1030,1031,1032,1033,1034,2002,2007,2008,2013,2015,2017,2018,2020,2021,2022,2023,2025,2026,2027,2033,2034,2037,2038,2039,2042,2052,2059,2082,2090,2095,2117,3024,3029,3039,3042,3046,3053,3072,3073,3092,3107,3120' 05_MotorImagery ROI_settings_fMRI.txt SenMot_BetaNEW.csv
# ./fmri_processing/combine_subject_mri_roi.sh '1002,1004,1007,1009,1010,1011,1013,1017,1018,1019,1020,1022,1024,1025,1026,1027,1029,1030,1031,1032,1033,1034' 05_MotorImagery SenMot_BetaNEW.csv fmri_SenMotYA.csv
# ./fmri_processing/combine_subject_mri_roi.sh '2002,2007,2008,2013,2015,2017,2018,2020,2021,2022,2023,2025,2026,2027,2033,2034,2037,2038,2039,2042,2052,2059,2082,2090,2095,2117,3024,3029,3039,3042,3046,3053,3072,3073,3092,3107,3120' 05_MotorImagery SenMot_BetaNEW.csv fmri_SenMotOA.csv

################################ beta estimate extraction #######################################
#./estimate_betas_by_condition.sh '2002,2007,2008,2012,2013,2015,2018,2020,2021,2022,2023,2025,2026' oldAdult 05_MotorImagery convert_load_sensitive_voxel_coordinates
#./estimate_betas_by_condition.sh '2002,2007,2008,2012,2013,2015,2018,2020,2021,2022,2023,2025,2026' oldAdult 05_MotorImagery create_roi_sphere_for_load_sensitive_rois

#./estimate_betas_by_condition.sh '2002,2007,2008,2012,2013,2015,2018,2020,2021,2022,2023,2025,2026' oldAdult 05_MotorImagery collect_load_sensitive_rois

#./estimate_betas_by_condition.sh '1002,1004,1010,1011,1013' youngAdult 05_MotorImagery convert_load_sensitive_voxel_coordinates
#./estimate_betas_by_condition.sh '1002,1004,1010,1011,1013' youngAdult 05_MotorImagery create_roi_sphere_for_load_sensitive_rois

# for this_subject in "${subject_array[@]}"; do
# 	./fmri_processing/preprocess_fmri.sh $this_subject check_fmri_ants
# done